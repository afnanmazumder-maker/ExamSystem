# ExamSystem Database Commands Reference
# =====================================

## Database Connection Commands
# Connect to MySQL Container:
docker exec -it examsystem-db-1 mysql -u examsys -pexamsys123 examsys

# One-line Query Execution:
docker exec -it examsystem-db-1 mysql -u examsys -pexamsys123 examsys -e "[SQL_QUERY]"

## Basic Database Information
# Show All Tables:
SHOW TABLES;

# Show Database Structure:
DESCRIBE users;
DESCRIBE exams;
DESCRIBE questions;
DESCRIBE options;
DESCRIBE submissions;
DESCRIBE answers;

# Show Table Creation SQL:
SHOW CREATE TABLE users;

## User Management Queries
# View All Users:
SELECT id, name, email, role, created_at FROM users;

# View Users by Role:
SELECT * FROM users WHERE role = 'admin';
SELECT * FROM users WHERE role = 'teacher';
SELECT * FROM users WHERE role = 'student';

# View User with Password Hash:
SELECT id, name, email, password_hash, role FROM users WHERE role = 'teacher';

# Count Users by Role:
SELECT role, COUNT(*) as count FROM users GROUP BY role;

## Exam Management Queries
# View All Exams:
SELECT id, title, description, created_by, is_published, time_limit_minutes, created_at FROM exams;

# View Exams with Creator Names:
SELECT e.id, e.title, e.description, u.name as creator, e.is_published, e.time_limit_minutes, e.created_at 
FROM exams e 
JOIN users u ON e.created_by = u.id;

# View Published Exams Only:
SELECT * FROM exams WHERE is_published = 1;

## Questions & Options Queries
# View All Questions:
SELECT q.id, q.exam_id, e.title as exam_title, q.question_text, q.type 
FROM questions q 
JOIN exams e ON q.exam_id = e.id;

# View Questions with Options:
SELECT q.id as question_id, q.question_text, o.id as option_id, o.option_text, o.is_correct 
FROM questions q 
JOIN options o ON q.id = o.question_id 
ORDER BY q.id, o.id;

# View Correct Answers:
SELECT q.question_text, o.option_text as correct_answer 
FROM questions q 
JOIN options o ON q.id = o.question_id 
WHERE o.is_correct = 1;

## Submissions & Results Queries
# View All Submissions:
SELECT s.id, e.title as exam_title, u.name as student_name, s.score, s.submitted_at 
FROM submissions s 
JOIN exams e ON s.exam_id = e.id 
JOIN users u ON s.student_id = u.id;

# View Student Performance:
SELECT u.name, e.title, s.score, s.submitted_at 
FROM submissions s 
JOIN users u ON s.student_id = u.id 
JOIN exams e ON s.exam_id = e.id 
WHERE u.name = 'afnan';

# View Exam Statistics:
SELECT e.title, COUNT(s.id) as attempts, AVG(s.score) as avg_score, MAX(s.score) as max_score 
FROM exams e 
LEFT JOIN submissions s ON e.id = s.exam_id 
GROUP BY e.id, e.title;

## Advanced Analysis Queries
# Top Performing Students:
SELECT u.name, AVG(s.score) as avg_score, COUNT(s.id) as exams_taken 
FROM users u 
JOIN submissions s ON u.id = s.student_id 
WHERE u.role = 'student' 
GROUP BY u.id, u.name 
ORDER BY avg_score DESC;

# Most Popular Exams:
SELECT e.title, COUNT(s.id) as total_attempts 
FROM exams e 
LEFT JOIN submissions s ON e.id = s.exam_id 
GROUP BY e.id, e.title 
ORDER BY total_attempts DESC;

# Recent Activity:
SELECT 'User Registration' as activity, name as details, created_at 
FROM users 
UNION ALL 
SELECT 'Exam Created' as activity, title as details, created_at 
FROM exams 
UNION ALL 
SELECT 'Exam Submitted' as activity, CONCAT('Score: ', score) as details, submitted_at as created_at 
FROM submissions 
ORDER BY created_at DESC 
LIMIT 10;

## Database Maintenance Commands
# Check Table Sizes:
SELECT table_name, table_rows, data_length, index_length 
FROM information_schema.tables 
WHERE table_schema = 'examsys';

# Backup Database:
docker exec examsystem-db-1 mysqldump -u examsys -pexamsys123 examsys > backup.sql

# View Database Status:
SHOW TABLE STATUS;

## Quick Reference Commands
# Connect and run multiple commands:
docker exec -it examsystem-db-1 mysql -u examsys -pexamsys123 examsys

# Example usage:
docker exec -it examsystem-db-1 mysql -u examsys -pexamsys123 examsys -e "SELECT COUNT(*) FROM users;"
docker exec -it examsystem-db-1 mysql -u examsys -pexamsys123 examsys -e "SELECT * FROM exams WHERE is_published = 1;"

# Database Credentials:
# Host: db (Docker container)
# Database: examsys
# Username: examsys
# Password: examsys123

# Default Admin Login:
# Email: admin@example.com
# Password: admin123